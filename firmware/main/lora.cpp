#include <Arduino.h>
#include <LoRa.h>
#include "lora.h"
#include <SPI.h>
#include "adc_reader.h"
#include "globals.h"
#include "SPIDeviceManager.h"
#include "MLX90614.h"
#include "MaxRead6675.h"
#include "WiFi.h"

#define PIN_MISO 18
#define PIN_MOSI 19
#define PIN_SCK  4
#define PIN_SS   21
#define PIN_RST  22
#define PIN_DIO0 23
#define LO_RA_EN_PIN 2

SPIClass spi_custom(HSPI);
String mac;

void initLoRa() {
  pinMode(LO_RA_EN_PIN, OUTPUT);
  pinMode(PIN_SS, OUTPUT);
  digitalWrite(LO_RA_EN_PIN, HIGH);
  digitalWrite(PIN_SS, HIGH);  // CS m·∫∑c ƒë·ªãnh ·ªü HIGH

  spi_custom.begin(PIN_SCK, PIN_MISO, PIN_MOSI, -1); // CS controlled manually

  LoRa.setSPI(spi_custom);
  LoRa.setPins(PIN_SS, PIN_RST, PIN_DIO0);

  if (!LoRa.begin(433E6)) {
    Serial.println("‚ùå LoRa kh·ªüi t·∫°o th·∫•t b·∫°i!");
    while (1);
  }

  Serial.println("‚úÖ LoRa ƒë√£ s·∫µn s√†ng!");
  mac = WiFi.macAddress();  // L·∫•y ƒë·ªãa ch·ªâ MAC ESP32, v√≠ d·ª• "24:6F:28:AA:BB:CC"
  Serial.println("ƒê·ªãa ch·ªâ MAC:");
  Serial.print(mac);
}

void sendLoRaPacket() {
  if (xSemaphoreTake(spiMutex, portMAX_DELAY) == pdTRUE) {
    selectSPIDevice(SPI_LORA);  // r√µ r√†ng h∆°n so v·ªõi s·ªë 0

    LoRa.beginPacket();
    mac.replace(":", "");  // B·ªè d·∫•u ":" ƒë·ªÉ d·ªÖ x·ª≠ l√Ω
    LoRa.print("ID");  // prefix gi√∫p b√™n nh·∫≠n bi·∫øt l√† ID
    LoRa.print(mac);
    LoRa.println(":");  // t·∫°o ƒë·ªãnh d·∫°ng ID:xxx
    LoRa.println("B·∫Øt ƒë·∫ßu g·ª≠i d·ªØ li·ªáu");
    LoRa.print("C·∫£m bi·∫øn l·ª≠a = ");
    LoRa.println(adc1);
    LoRa.print("C·∫£m bi·∫øn ga = ");
    LoRa.println(adc2);
    LoRa.print("Ambient_MLX90614 = ");
    LoRa.println(Ambient);
    LoRa.print("Object_MLX90614 = ");
    LoRa.println(Object);
    LoRa.print("Object_MAX6675 = ");
    LoRa.println(tempC);
    LoRa.println("K·∫øt th√∫c g·ª≠i d·ªØ li·ªáu");
    LoRa.endPacket();

    selectSPIDevice(SPI_NONE);  // b·ªè ch·ªçn sau khi g·ª≠i xong
    xSemaphoreGive(spiMutex);
  }

  Serial.println("üì§ ƒê√£ g·ª≠i g√≥i LoRa");
}

// Ch·ªâ d√πng n·∫øu b·∫°n c·∫ßn "reset" SPI
// void suspendLoRaSPI() {
//   spi_custom.end();
//   delay(5);
// }

// void resumeLoRaSPI() {
//   spi_custom.begin(PIN_SCK, PIN_MISO, PIN_MOSI, -1);
//   LoRa.setPins(PIN_SS, PIN_RST, PIN_DIO0);
//   LoRa.begin(433E6);  // C√¢n nh·∫Øc k·ªπ: n√™n h·∫°n ch·∫ø g·ªçi l·∫°i n·∫øu ƒëang ho·∫°t ƒë·ªông ·ªïn
// }
